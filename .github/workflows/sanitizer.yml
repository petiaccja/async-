name: Sanitize

on:
  push:
    branches:
      - master
    tags:
      - v**.**
  pull_request:
    branches:
      - master

jobs:
  sanitize:
    strategy:
      fail-fast: false
      matrix:
        # sanitize: [address, memory, thread]
        sanitize: [address]
        include:
          - sanitize: address
            sanitize_flag: ENABLE_LLVM_ADDRESS_SANITIZER
        #   - sanitize: memory
        #     sanitize_flag: ENABLE_LLVM_MEMORY_SANITIZER
        #   - sanitize: thread
        #     sanitize_flag: ENABLE_LLVM_THREAD_SANITIZER

    env:
        os: "ubuntu-latest"
        build_type: "Debug"
        cxx_standard: "20"
        c_compiler: "clang"
        cxx_compiler: "clang++"
        conan_preset: "conan-debug"

    name: ${{ matrix.sanitize }}
        
    runs-on: "ubuntu-latest"
    
    steps:
    - uses: actions/checkout@v4
    - uses: seanmiddleditch/gha-setup-ninja@v4
    - uses: seanmiddleditch/gha-setup-vsdevenv@master
    - uses: KyleMayes/install-llvm-action@v1
      with:
        version: "17.0"
        directory: ${{ runner.temp }}/llvm

    - name: Install GCC
      shell: bash
      run: |
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt update
        sudo apt install gcc-13 g++-13
        sudo update-alternatives --remove-all gcc || true
        sudo update-alternatives --remove-all g++ || true
        sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-13 10 --slave /usr/bin/g++ g++ /usr/bin/g++-13

    - name: Install conan
      shell: bash
      env:
        CC: "${{ env.c_compiler != 'cl' && env.c_compiler || '' }}"
        CXX: "${{ env.cxx_compiler != 'cl' && env.cxx_compiler || '' }}"
      run: |
        pip install conan
        conan profile detect --name ci --force
        python $GITHUB_WORKSPACE/support/update-conan-profile.py $(conan profile path ci) ${{env.build_type}} ${{env.c_compiler}} ${{env.cxx_compiler}} ${{env.cxx_standard}}

    - name: Cache conan packages
      id: cache-conan
      uses: actions/cache@v3
      with:
        path: ~/.conan2/p
        key: conan-cache-packages-${{ env.os }}-${{ env.c_compiler }}-${{ env.build_type }}-${{ env.cxx_standard }}

    - name: Create Build Environment
      run: cmake -E make_directory ${{runner.workspace}}/build

    - name: Configure CMake
      shell: bash
      working-directory: ${{runner.workspace}}/build
      env:
        CC: ${{env.c_compiler}}
        CXX: ${{env.cxx_compiler}}
      run: |
        conan install $GITHUB_WORKSPACE --output-folder=. --build="*" -pr ci -pr:b ci -s build_type=${{ env.build_type }}
        conan cache clean
        cmake $GITHUB_WORKSPACE --preset ${{ env.conan_preset }} -D${{ matrix.sanitize_flag }}:BOOL=ON

    - name: Build
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: |
        cmake --build ./build/${{ env.build_type }}
        cmake -E make_directory ${{runner.workspace}}/installation/SEDManager
        cmake --install ./build/${{ env.build_type }} --prefix '${{runner.workspace}}/installation/SEDManager'

    - name: Test
      working-directory: ${{runner.workspace}}/build
      shell: bash
      run: ./build/${{ env.build_type }}/bin/test
